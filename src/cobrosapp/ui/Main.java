package cobrosapp.ui;

import interfaces.PagarMesSeleccionado;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.YearMonth;
import java.time.format.TextStyle;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import logica.Metodos;
import pojo.Cliente;

/**
 *
 * @author USER
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        listModel = new DefaultListModel<>();
        listaSugerencia = new JList<>(listModel);
        listaSugerencia.setFont(new Font("Arial", Font.BOLD, 14));
        pupoSugerencia = new JPopupMenu();
        panelPagoOtrosMeses.setVisible(false);
        listaSugerencia.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        pupoSugerencia.setLayout(new BorderLayout());
        pupoSugerencia.add(new JScrollPane(listaSugerencia), BorderLayout.CENTER);
        listaSugerencia.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                inputSearchField.setText(listaSugerencia.getSelectedValue().getNombre());
                pupoSugerencia.setVisible(false);
                panelPagoOtrosMeses.setVisible(true);
                panelPintarMeses.removeAll();
            }
        });
    }

    private JList<Cliente> listaSugerencia;
    private DefaultListModel<Cliente> listModel;
    private JPopupMenu pupoSugerencia;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        panelPagoOtrosMeses = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        panelPintarMeses = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        selectCodigo = new javax.swing.JRadioButton();
        selectNombre = new javax.swing.JRadioButton();
        inputSearchField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 51));

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setForeground(new java.awt.Color(0, 0, 255));
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jPanel1.setBackground(new Color(0xEAECEE));

        jPanel4.setBackground(new Color(0xD6DBDF));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pagos de otros meses", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        panelPagoOtrosMeses.setBackground(new Color(0xD6DBDF));

        jButton3.setBackground(new Color(0x2471A3));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Obtener registro de pagos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        panelPintarMeses.setBackground(new Color(0xD6DBDF));

        javax.swing.GroupLayout panelPintarMesesLayout = new javax.swing.GroupLayout(panelPintarMeses);
        panelPintarMeses.setLayout(panelPintarMesesLayout);
        panelPintarMesesLayout.setHorizontalGroup(
            panelPintarMesesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelPintarMesesLayout.setVerticalGroup(
            panelPintarMesesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelPagoOtrosMesesLayout = new javax.swing.GroupLayout(panelPagoOtrosMeses);
        panelPagoOtrosMeses.setLayout(panelPagoOtrosMesesLayout);
        panelPagoOtrosMesesLayout.setHorizontalGroup(
            panelPagoOtrosMesesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPagoOtrosMesesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPagoOtrosMesesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelPintarMeses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelPagoOtrosMesesLayout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelPagoOtrosMesesLayout.setVerticalGroup(
            panelPagoOtrosMesesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPagoOtrosMesesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPintarMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPagoOtrosMeses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(panelPagoOtrosMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 29, Short.MAX_VALUE))
        );

        jButton1.setBackground(new Color(0x2471A3));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jRadioButton3.setText("Id");

        buttonGroup2.add(selectCodigo);
        selectCodigo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        selectCodigo.setText("Codigo");

        buttonGroup2.add(selectNombre);
        selectNombre.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        selectNombre.setText("Nombre");

        inputSearchField.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        inputSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputSearchFieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(inputSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(selectNombre)
                        .addGap(18, 18, 18)
                        .addComponent(selectCodigo)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(0, 99, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectNombre)
                    .addComponent(selectCodigo)
                    .addComponent(jRadioButton3)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cobros", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 699, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Adeudos", jPanel2);

        jMenuBar1.setBackground(new java.awt.Color(0, 102, 102));

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Cobros");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputSearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputSearchFieldKeyPressed
        ArrayList<Cliente> lista = new ArrayList();
        Cliente cliente;
        String buscarPor = "";
        try {
            if (!inputSearchField.getText().isEmpty()) {
                buscarPor = selectCodigo.isSelected() ? "numero" : "nombre";
                ResultSet resultado = Metodos.consultaLike(buscarPor, inputSearchField.getText());
                while (resultado.next()) {
                    cliente = new Cliente(
                            resultado.getString("nombre"),
                            resultado.getInt("id"),
                            resultado.getInt("numero")
                    );
                    lista.add(cliente);
                }

                mostrarSugerencias(lista);
            }
        } catch (SQLException ex) {
            System.err.println("Error " + ex.getMessage());
        }
    }//GEN-LAST:event_inputSearchFieldKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        inputSearchField.setText("");
        panelPagoOtrosMeses.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        recargarMesesPanel();
    }//GEN-LAST:event_jButton3ActionPerformed

    public void recargarMesesPanel() {
        panelPintarMeses.setVisible(true);
        panelPintarMeses.removeAll();
        panelPintarMeses.setLayout(new BorderLayout());
        int idClienteSeleccionado = listaSugerencia.getSelectedValue().getId();
        ResultSet noPagadosYPagados = null;
        try {
            noPagadosYPagados = Metodos.obtenerMesesNoPagadosDeUnCliente(
                    idClienteSeleccionado,
                    YearMonth.now().getYear()
            );
        } catch (SQLException ex) {
            System.err.println("Error al obtener pagos y tomas de los meses " + ex.getMessage());
        }

        pintarMesesPagadosyNoPagados(noPagadosYPagados);
    }

    public DefaultTableModel getTableModel() {
        return new DefaultTableModel(new Object[]{"Mes", "Toma", "Estado", "Acción", "ID_toma"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 3;
            }
        };
    }

    public void pintarMesesPagadosyNoPagados(ResultSet rs) {
        DefaultTableModel model = getTableModel();
        try {
            while (rs.next()) {
                int mes = rs.getInt("mes");
                String mesNombre = Metodos.obtenerNombreMes(mes).toUpperCase();
                String toma = rs.getString("id_toma");//identenficador de pago
                String estado = rs.getString("estado");
                int numToma = rs.getInt("numero_toma");
                Object accion = estado.equalsIgnoreCase("No Pagado") ? "Pagar" : null;

                model.addRow(new Object[]{mesNombre, numToma, estado, accion, toma});
            }
            rs.close();
        } catch (SQLException ex) {
            System.err.println("Error al obtener los campos de pagos y tomas " + ex.getMessage());
        }

        JTable tabla = getTable(model);
        //tabla.getColumnModel().getColumn(2).setCellRenderer(new EstadoPagoRenderer());
        JScrollPane scrollPane = new JScrollPane(tabla);
        panelPintarMeses.add(scrollPane, BorderLayout.CENTER);
        panelPintarMeses.repaint();
        panelPintarMeses.updateUI();
    }

    public JTable getTable(DefaultTableModel model) {
        JTable tabla = new JTable(model);

        // Renderer de color para la columna Estado
        tabla.getColumnModel().getColumn(2).setCellRenderer(new EstadoPagoRenderer());

        // Ocultar la columna ID_Toma
        tabla.getColumnModel().getColumn(4).setMinWidth(0);
        tabla.getColumnModel().getColumn(4).setMaxWidth(0);
        tabla.getColumnModel().getColumn(4).setWidth(0);
        // Renderer para botón
        tabla.getColumn("Acción").setCellRenderer(new TableCellRenderer() {
            private final JButton boton = new JButton("Pagar");

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                if (value != null) {
                    //boton.setText("Pagar");
                    boton.setBackground(new Color(0x2471A3));
                    boton.setForeground(Color.WHITE);
                    return boton;
                } else {
                    return new JLabel(); // Celda vacía si ya está pagado
                }
            }
        });
        tabla = getColumnAction(tabla);
        return tabla;
    }

    public JTable getColumnAction(JTable tabla) {
        tabla.getColumn("Acción").setCellEditor(new DefaultCellEditor(new JCheckBox()) {
            private final JButton boton = new JButton("Pagar");

            {
                boton.addActionListener(e -> {
                    int fila = tabla.getSelectedRow();
                    String mes = (String) tabla.getValueAt(fila, 0);
                    String toma = (String) tabla.getValueAt(fila, 4);

                    String montoStr = (String)JOptionPane.showInputDialog(
                            tabla,
                            "Ingrese el monto a pagar para Toma " + toma + " en " + mes,
                            "",
                            JOptionPane.PLAIN_MESSAGE,
                            null,
                            null,
                            Metodos.getMontoMensual());
                    
                    if (montoStr != null) {
                        try {
                            double monto = Double.parseDouble(montoStr);
                            Date fechaPago = Date.valueOf(LocalDate.now());
                            Time horaPago = Time.valueOf(LocalTime.now());

                            boolean estado = Metodos.validarCobroCorrecto(
                                    Integer.parseInt(toma),
                                    listaSugerencia.getSelectedValue().getId()
                            );

                            if (estado) {
                                int mesNombre = Metodos.obtenerNumeroMes(mes);
                                String periodo = LocalDate.now().getYear() + "-" + String.format("%02d", mesNombre);

                                try {
                                    Metodos.insertarPago(
                                            fechaPago,
                                            horaPago,
                                            Integer.parseInt(toma),
                                            monto,
                                            periodo
                                    );
                                    JOptionPane.showMessageDialog(tabla, "Pago registrado exitosamente.");
                                } catch (SQLException ex) {
                                    System.err.println("Error al registar pago " + ex.getMessage());
                                }
                                recargarMesesPanel();
                            } else {
                                JOptionPane.showMessageDialog(tabla, "Hubo un error al realizar el pago.\n"
                                        + "Intente limpiar e intentar de nuevo.",
                                        "Error",
                                        2);
                            }
                        } catch (NumberFormatException ex) {
                            JOptionPane.showMessageDialog(tabla, "Monto inválido");
                        }
                    }
                });
            }

            @Override
            public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
                return boton;
            }

            @Override
            public Object getCellEditorValue() {
                return "Pagar";
            }
        });
        return tabla;
    }

    public void mostrarSugerencias(ArrayList<Cliente> lista) {
        listModel.clear();
        lista.forEach(e -> {
            listModel.addElement(e);
        });

        if (!lista.isEmpty()) {
            listaSugerencia.setSelectedIndex(0);
            pupoSugerencia.show(inputSearchField, 0, inputSearchField.getHeight());
            inputSearchField.requestFocus();

        } else {
            pupoSugerencia.setVisible(false);
        }
    }

    public String getPeriodo() {
        YearMonth actual = YearMonth.now();
        return actual.toString();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField inputSearchField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panelPagoOtrosMeses;
    private javax.swing.JPanel panelPintarMeses;
    private javax.swing.JRadioButton selectCodigo;
    private javax.swing.JRadioButton selectNombre;
    // End of variables declaration//GEN-END:variables
}
